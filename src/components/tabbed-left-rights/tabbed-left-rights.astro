---
import slugify from 'slugify';
import markdownit from 'markdown-it';
const md = markdownit({ html: true });

function slugifyText(text: string) {
  return slugify(text);
}

interface Props {
  heading: string;
  subheading: string;
  background_color: string;
  text_color: string;
  tabs: [
    {
      tab_title: string;
      image: {
        image_path: string;
        image_alt: string;
      };
      title: {
        title_text: string;
        title_color: string;
      };
      subtitle: {
        subtitle_text: string;
        subtitle_color: string;
      };
      cta: {
        cta_text: string;
        cta_color: string;
        cta_link: string;
      };
    },
  ];
}

const block = Astro.props;
---

<section
  style={`background-color: ${block.background_color}; color: ${block.text_color}`}>
  <div class="container">
    <h2 class="title" set:html={md.render(block.heading)} />
    <div
      class="tabbed-left-right-subtitle"
      set:html={md.render(block.subheading)}
    />
    <!-- Tabs -->
    <ul id="nav-tab" class="nav">
      {
        block.tabs.map((tab, index) => {
          if (index == 0) {
            return (
              <li class="active">
                <a href={`#${slugifyText(tab.tab_title)}`}>{tab.tab_title}</a>
              </li>
            );
          }
          return (
            <li>
              <a href={`#${slugifyText(tab.tab_title)}`}>{tab.tab_title}</a>
            </li>
          );
        })
      }
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
      {
        block.tabs.map((tab, index) => {
          if (index == 0) {
            return (
              <div class="tab-pane active" id={`${slugifyText(tab.tab_title)}`}>
                <img src={tab.image.image_path} alt={tab.image.image_alt} />
                <div class="text-content">
                  <h3 style={`color: ${tab.title.title_color}`}>
                    {tab.title.title_text}
                  </h3>
                  <p style={`color: ${tab.subtitle.subtitle_color}`}>
                    {tab.subtitle.subtitle_text}
                  </p>
                  <a
                    class="cta"
                    href={tab.cta.cta_link}
                    style={`color: ${tab.cta.cta_color};`}>
                    {tab.cta.cta_text}
                    <img src="/icons/RightArrow.svg" alt="Right Arrow" />
                  </a>
                </div>
              </div>
            );
          }
          return (
            <div class="tab-pane" id={`${slugifyText(tab.tab_title)}`}>
              <img src={tab.image.image_path} alt={tab.image.image_alt} />
              <div class="text-content">
                <h3 style={`color: ${tab.title.title_color}`}>
                  {tab.title.title_text}
                </h3>
                <p style={`color: ${tab.subtitle.subtitle_color}`}>
                  {tab.subtitle.subtitle_text}
                </p>
                <a
                  class="cta"
                  href={tab.cta.cta_link}
                  style={`color: ${tab.cta.cta_color};`}>
                  {tab.cta.cta_text}
                  <img src="/icons/RightArrow.svg" alt="Right Arrow" />
                </a>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
  <script is:inline async>
    function onTabClick(event) {
      let activeTabs = document.querySelectorAll('.active');

      // deactivate existing active tab and panel
      activeTabs.forEach(function (tab) {
        tab.className = tab.className.replace('active', '');
      });

      // activate new tab and panel
      event.target.parentElement.className += ' active';
      document.getElementById(event.target.href.split('#')[1]).className +=
        ' active';
    }

    const element = document.getElementById('nav-tab');

    element.addEventListener('click', onTabClick, false);
  </script>
</section>

<style is:global>
  .tabbed-left-right-subtitle > p {
    font-size: 1.25rem;
    line-height: 2rem;
    margin-bottom: 2rem;
    max-width: 412px;
    font-weight: 300;
    text-align: center;
  }
</style>

<style>
  .container {
    max-width: var(--pageContainer);
    padding-inline: var(--pagePadding);
    padding-block: 96px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .title {
    font-family:
      Playfair Display,
      serif;
    font-size: 3rem;
    line-height: 3.5rem;
    font-weight: 400;
  }

  ul {
    list-style: none;
    padding: 0;
  }
  ul li {
    display: inline-flex;
  }
  ul li a {
    text-decoration: none;
    color: #ffffff;
    padding-inline: 1.5rem;
    padding-bottom: 0.3125rem;
    transition: all 0.3s ease-in-out;
    border-bottom: 1px solid transparent;
    font-weight: 300;
    letter-spacing: 0.075ch;
  }
  ul li a:hover {
    border-bottom: 1px solid #d7be79;
  }

  .nav .active a {
    border-bottom: 1px solid #d7be79;
  }
  .tab-pane {
    display: none;
  }

  .tab-pane.active {
    display: flex;
    gap: 4rem;
    align-items: center;
    padding-top: 96px;
  }

  .tab-pane img {
    width: 50%;
  }

  .tab-pane .text-content {
    padding: 2rem;
    width: 50%;
    font-weight: 300;
  }

  .text-content h3 {
    font-size: 2rem;
    line-height: 2.5rem;
  }

  .text-content p {
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .cta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    letter-spacing: 0.25ch;
    font-size: 0.875rem;
    line-height: 1.26rem;
    padding-top: 2rem;
  }
  .text-content a img {
    width: 1.5rem;
  }
</style>
