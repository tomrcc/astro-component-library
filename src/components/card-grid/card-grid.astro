---
interface Props {
  heading: {
    heading_text: string;
    heading_color: string;
  };
  background_color: string;
  grid_columns: number;
  cards_max_width: number;
  cards: Array<any>;
}

const block = Astro.props;
const cards = import.meta.glob('/src/components/cards/**/*.astro', {
  eager: true,
});

const gridColumns = block.grid_columns;
const cardsMaxWidth = block.cards_max_width + 'rem';
---

<section
  class="card-grid"
  style={`background-color: ${block.background_color};`}>
  <div class="card-grid__container">
    {
      block.heading.heading_text ? (
        <h2
          class="text-[1.825rem] font-semibold mb-3 text-center"
          style={`color: ${block.heading.heading_color};`}>
          {block.heading.heading_text}
        </h2>
      ) : null
    }
    <div class="card-grid__cards">
      {
        block.cards.map((card) => {
          const bookshopNameArr = card._bookshop_name.split('/');
          const bookshopName = bookshopNameArr[bookshopNameArr.length - 1];
          const name = `/src/components/cards/${bookshopName}/${bookshopName}.astro`;
          const Component = cards[name].default;
          return <Component {...card} />;
        })
      }
    </div>
  </div>
</section>
<style
  define:vars={{
    gridColumns,
    cardsMaxWidth,
  }}
>
  .card-grid {
    position: relative;
  }
  .card-grid__container {
    max-width: var(--pageContainer);
    margin: 0 auto;
    padding-block: 48px;
    padding-inline: var(--pagePadding);
    display: flex;
    flex-direction: column;
  }
  .card-grid__cards {
    display: grid;
    gap: 2rem;
    justify-content: center;
    width: 100%;
    grid-template-columns: 1fr;
  }
  .button {
    display: inline-flex;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    border-radius: 6.25rem;
    font-weight: 600;
    letter-spacing: 0.01em;
    cursor: pointer;
    background-color: #031419;
    padding-inline: 1.5rem;
    padding-block: 0.75rem;
    color: #ffffff;
    align-self: center;
    margin-top: 2rem;
  }
  @media screen and (min-width: 800px) {
    .card-grid__container {
      padding-block: 96px;
    }
    .card-grid__cards {
      justify-content: space-between;

      grid-template-columns: repeat(
        var(--gridColumns),
        min(
          var(--cardsMaxWidth),
          calc((100% - (2rem * (var(--gridColumns) - 1))) / var(--gridColumns))
        )
      );
    }
  }
</style>

<!-- - (2rem * (var(--gridColumns) - 1)) -->
